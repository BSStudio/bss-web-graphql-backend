version: '2.1'
orbs:
  node: circleci/node@7.2.0
  docker: circleci/docker@2.8.2
  codecov: codecov/codecov@5.4.3
  github-cli: circleci/github-cli@2.7.0
executors:
  node-machine:
    machine:
      image: ubuntu-2204:edge
      docker_layer_caching: true
defaults:
  docker_publish: &docker_publish
    image: bsstudio/bss-web-graphql-backend
    registry: ghcr.io
    executor: docker/docker
    remote-docker-version: default
    use-remote-docker: true
    remote-docker-dlc: true
    use-buildkit: true
  tag_only: &tag_only
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /.*/
jobs:
  coverage:
    executor: node/default
    steps:
      - checkout
      - node/install-packages
      - run: npm run test:coverage
      - codecov/upload:
          flags: unit
      - store_artifacts:
          path: reports
  integration-test:
    executor: node-machine
    steps:
      - checkout
      - node/install-packages
      - run:
          command: npm run test:int:ci
          environemnt:
            - DEBUG: testcontainers:compose
      - store_test_results:
          path: reports
  github_release:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - github-cli/install:
          version: 2.43.1
      - github-cli/setup:
          version: 2.43.1
      - run: gh release create << pipeline.git.tag >> -t << pipeline.git.tag >> --generate-notes
workflows:
  Build:
    jobs:
      - node/run:
          name: Compile
          npm-run: build
      - node/test:
          name: Unit test
          run-command: test:ci
          test-results-path: reports
      - integration-test:
          name: Integration test
      - coverage:
          name: Coverage
      - node/run:
          name: Lint
          npm-run: lint
      - docker/hadolint:
          name: Lint Dockerfile
      - docker/publish:
          name: Build docker image
          deploy: false
          image: bsstudio/bss-web-public-backend
          registry: ghcr.io
          executor: docker/docker
          remote-docker-version: default
          use-remote-docker: true
          remote-docker-dlc: true
          use-buildkit: true
  Release:
    jobs:
      - docker/publish:
          name: Publish image
          context:
            - BSS Github deploy
          <<: [*docker_publish, *tag_only]
          tag: latest,<< pipeline.git.tag >>
      - github_release:
          name: Create release
          context:
            - BSS Github deploy
          <<: *tag_only
